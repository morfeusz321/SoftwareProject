"title","description"
"Intuitive drag-and-drop interface","As a user, I want to be able to easily connect systems with Insocial using an intuitive drag-and-drop interface for creating control flow graphs with nodes translated from company endpoints."
"Edit created flows","As a user, I want to be able to edit my created flows to make changes when necessary."
"Disable or enable created flows","As a user, I want to be able to disable or enable my created flows as needed, depending on my requirements."
"Graphical representation of API connections","As a user, I want to be able to visualize my API connections using a graphical representation within the flow builder."
"Customizable API connections","As a user, I want to be able to create customizable API connections by defining nodes that can execute arbitrary API calls and specifying the endpoint, request method, and request body."
"Insocial platform integration","As a user, I want the flow builder to be seamlessly integrated with the Insocial platform and its existing MySQL database for a smooth experience."
"Authentication integration","As a user, I want the flow builder to be easily integrated with the existing authentication of the Insocial platform after the development process and use a hardcoded bearer token during development for security."
"Perform GET, POST, PUT actions","As a user, I want the system to perform GET, POST, PUT actions on any given endpoint and trigger actions based on input received from API calls to meet my API requirements."
"Logic flow and control support","As a user, I want the system to provide support for logic flow and control, including triggers, conditions, schedules, and possibly loops, to create complex and efficient flows."
"User profiles and graph storage","As a user, I want to have a profile where my graphs are stored and updated in the database for easy access and management."
"Manual flow execution","As a user, I want to be able to execute the flow manually whenever necessary."
"Backend implementation with PHP 8","As a developer, I want the backend to be implemented using PHP 8 for consistency and performance."
"Database with MySQL","As a developer, I want the database to use MySQL for compatibility with the Insocial platform."
"Frontend with Angular and TypeScript","As a developer, I want the frontend to be implemented using Angular CLI with TypeScript for a modern and maintainable codebase."
"Scheduled flow execution","As a user, I want the system to execute the flow using the schedule specified by me to automate tasks."
"JSON data format support","As a user, I want the system to support the JSON data format for easy data manipulation and compatibility with most APIs."
"Product documentation","As a developer and user, I want the product to be well documented, including source code, README files, and information about dependencies, build processes, APIs, and other relevant information for easy understanding and maintenance."
"Error handling system","As a user, I want an error handling system that allows me to see what and where in the flow a problem occurred, so I can troubleshoot and fix issues."
"Testing functionality","As a user, I want to be able to use 'testing functionality' to check control flow outcomes and endpoint responses, ensuring that my flows are working as expected."
"Match Insocial design style","As a user, I want the system to match the design style used in Insocial, following the brand book for components and colours, for a consistent user experience."
"Dutch translation capability","As a user, I want the system to have the ability to be translated into Dutch in later stages of development for better accessibility to Dutch-speaking users."
"Node reuse for multiple graphs","As a user, I want to be able to reuse nodes for multiple graphs created by me to save time and effort."
"Pre-built Mail API node template","As a user, I want the system to provide a pre-built template for a node specifically designed to handle Mail API calls for quick and easy email-related integrations."
"Debugging functionality","As a user, I could benefit from a debugging functionality in the system that helps me identify and fix issues in my flows more effectively."
"XML data format support","As a user, I could benefit from the system supporting XML data formats, allowing me to work with a wider variety of APIs and data types."
"API response testing","As a user, I could benefit from the ability to test API responses to check data formats, ensuring compatibility and proper data handling within my flows."
